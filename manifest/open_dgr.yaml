apiVersion: v1
kind: Namespace
metadata:
  name: open-dgr

---

apiVersion: v1
kind: Service
metadata:
  name: open-dgr-svc
  namespace: open-dgr
spec:
  ports:
    - name: tcp
      nodePort: 
      port: 18080
      protocol: TCP
      targetPort: 18080
  selector:
    app: digi
  sessionAffinity: None
  type: NodePort
status:
  loadBalancer: {}

---

apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: digi
  name: open-dgr
  namespace: open-dgr
spec:
  progressDeadlineSeconds: 600
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app: digi
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
    type: RollingUpdate
  template:
    metadata:
      creationTimestamp: null
      labels:
        app: digi
      namespace: open-dgr
    spec:
      containers:
        - args:
            - dgrv4-gateway-OpenDGR-v4.2.0-29-g8540640.jar
            - '-Xms1g'
            - '-Xmx2g'
            - '-Dloader.path=./libsext,./lib'
            - '-Dspring.profiles.active=local'
            - '-Dserver.port=18080'
            - '-Dfile.encoding=UTF-8'
            - '-Dlogging.config=file:config/logback.xml'
            - '-Ddigi.instance.id=DROS'
            - '-Dspring.datasource.url=jdbc:h2:mem:dgrdb\;DB_CLOSE_DELAY=-1'
            - org.springframework.boot.loader.launch.PropertiesLauncher
          command:
            - java
            - '-cp'
          env:
            - name: TZ
              value: Asia/Taipei
            - name: TAEASK
              value: TsmpAESEncryptionActionSecretKey
          image: ghcr.io/tpisoftware-digirunner/open-dgr:v4.2.0
          imagePullPolicy: Always
          name: open-dgr
          ports:
            - containerPort: 18080
              name: tcp
              protocol: TCP
          resources:
            limits:
              cpu: '1'
              memory: 2Gi
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          workingDir: /opt/open-dgr
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      terminationGracePeriodSeconds: 30

